name: Build and Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push Docker image
      - name: Build and push Docker image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: magdalebam/cloud-app:${{ github.sha }}  # Using commit SHA as the tag

      # Step 5: Set up kubectl
      - name: Set up kubectl
        shell: powershell
        run: |
          Write-Host "Setting up kubectl..."

          # Decode base64 kubeconfig and save to file
          $kubeconfigDecoded = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('${{ secrets.KUBECONFIG_B64 }}'))
          $kubeconfigPath="C:\Users\Magdalena\Desktop\Desktop\master\AC\Project\cloud-app\k3s.yaml"
          $kubeconfigDecoded | Out-File -FilePath $kubeconfigPath -Encoding ascii

          # Set KUBECONFIG env variable for subsequent commands
          $env:KUBECONFIG = $kubeconfigPath
          
          # Debugging steps
          Write-Host "Kubeconfig file saved to $kubeconfigPath"
          #kubectl config get-contexts
          #kubectl config use-context default
          #kubectl config current-context
          #kubectl cluster-info

      # Step 6: Debug K3s network connectivity
      - name: Debug K3s network connectivity
        shell: powershell
        run: |
          Write-Host "Pinging K3s server..."
          ping -n 4 172.29.14.201

          Write-Host "Trying curl to K3s server..."
          try {
            curl --insecure --connect-timeout 5 https://172.29.14.201:6443
          }
          catch {
            Write-Host "Curl failed"
          }


      # Step 8: Update Deployment with the new image tag
      - name: Update Deployment with new image tag
        shell: powershell
        run: |
          Write-Host "Updating deployment..."
          $env:KUBECONFIG = "C:\Users\Magdalena\Desktop\Desktop\master\AC\Project\cloud-app\k3s.yaml"
          kubectl set image deployment/cloud-app cloud-app=magdalebam/cloud-app:${{ github.sha }} --record

          Write-Host "Verifying deployment rollout status..."
          kubectl rollout status deployment/cloud-app

      # Step 9: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        shell: powershell
        run: |
          Write-Host "Applying Kubernetes deployment..."
          $env:KUBECONFIG = "C:\Users\Magdalena\Desktop\Desktop\master\AC\Project\cloud-app\k3s.yaml"
          # Uncomment the next line if you want to apply the deployment YAML file
          # kubectl apply -f docker/deploy.yml

          Write-Host "Getting deployments..."
          kubectl get deployments

          Write-Host "Getting pods..."
          kubectl get pods
