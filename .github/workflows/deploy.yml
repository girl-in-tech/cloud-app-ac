name: Build and Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push Docker image
      - name: Build and push Docker image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: magdalebam/cloud-app:${{ github.sha }}  # Using commit SHA as the tag

      # Step 5: Set up kubectl
      - name: Set up kubectl
        shell: pwsh
        run: |
          Write-Host "Setting up kubectl..."

          $decoded = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("${{ secrets.KUBECONFIG_B64 }}"))
          $kubeconfigPath = "$env:USERPROFILE\k3s.yaml"
          $decoded | Out-File -FilePath $kubeconfigPath -Encoding ascii
          $env:KUBECONFIG = $kubeconfigPath

          Write-Host "Kubeconfig file: $kubeconfigPath"
          kubectl config get-contexts
          if ($LASTEXITCODE -ne 0) { Write-Host "Failed to list contexts" }

          kubectl config use-context default
          if ($LASTEXITCODE -ne 0) { Write-Host "Context 'default' not found" }

          kubectl config current-context
          if ($LASTEXITCODE -ne 0) { Write-Host "Failed to get current context" }

          kubectl cluster-info
          if ($LASTEXITCODE -ne 0) { Write-Host "Failed to get cluster info" }

      # Step 5.1: Debug K3s network connectivity
      - name: Debug K3s network connectivity
        shell: pwsh
        run: |
          Write-Host "Pinging K3s server..."
          ping 172.29.14.201 -n 4
          if ($LASTEXITCODE -ne 0) { Write-Host "Ping failed" }

          Write-Host "Trying curl to K3s server..."
          curl.exe --insecure --connect-timeout 5 https://172.29.14.201:6443
          if ($LASTEXITCODE -ne 0) { Write-Host "Curl failed" }

      # Step 5.2: Test kubectl access
      - name: Test kubectl access
        shell: pwsh
        run: |
          $env:KUBECONFIG = "$env:USERPROFILE\k3s.yaml"
          Write-Host "Testing kubectl get pods..."
          kubectl get pods --all-namespaces
          if ($LASTEXITCODE -ne 0) { Write-Host "kubectl failed" }

      # Step 6: Update Deployment with the new image tag
      - name: Update Deployment with new image tag
        shell: pwsh
        run: |
          $env:KUBECONFIG = "$env:USERPROFILE\k3s.yaml"
          Write-Host "Updating deployment..."
          kubectl set image deployment/cloud-app cloud-app=magdalebam/cloud-app:${{ github.sha }} --record
          if ($LASTEXITCODE -ne 0) { Write-Host "Failed to set image for deployment" }
          kubectl rollout status deployment/cloud-app
          if ($LASTEXITCODE -ne 0) { Write-Host "Failed to get deployment status" }

      # Step 7: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        shell: pwsh
        run: |
          $env:KUBECONFIG = "$env:USERPROFILE\k3s.yaml"
          Write-Host "Applying Kubernetes deployment..."
          # Uncomment the line below if you want to apply the full deployment YAML
          # kubectl apply -f docker/deploy.yml
          # if ($LASTEXITCODE -ne 0) { Write-Host "Failed to apply Kubernetes deployment" }
          kubectl get deployments
          if ($LASTEXITCODE -ne 0) { Write-Host "Failed to get deployments" }
          kubectl get pods
          if ($LASTEXITCODE -ne 0) { Write-Host "Failed to get pods" }
